<Project Sdk="Microsoft.NET.Sdk">

  <Sdk Name="Aspire.AppHost.Sdk" Version="9.1.0"/>

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <IsAspireHost>true</IsAspireHost>
    <UserSecretsId>b21d185c-d8b4-4cc0-bdbf-fcd98926899f</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Aspire.Hosting.AppHost" Version="9.1.0"/>
    <PackageReference Include="Aspire.Hosting.AWS" Version="9.1.5"/>
    <PackageReference Include="Aspire.Hosting.NodeJs" Version="9.1.0"/>
    <PackageReference Include="Aspire.Hosting.PostgreSQL" Version="9.1.0"/>
    <PackageReference Include="Aspire.Hosting.RabbitMQ" Version="9.1.0"/>
    <PackageReference Include="Aspire.Hosting.Redis" Version="9.1.0"/>

  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\backend\CreatorFund.Api\CreatorFund.Api.csproj"/>
  </ItemGroup>

  <ItemGroup>
    <Content Include="..\..\..\.dockerignore">
      <Link>DockerFiles\RabbitMq\.dockerignore</Link>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <None Update="DockerFiles\RabbitMq\Dockerfile">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="app-resources.template">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="DockerFiles\RabbitMq\context\"/>
  </ItemGroup>
  <Target Name="RestoreNpm" BeforeTargets="Build" Condition=" '$(DesignTimeBuild)' != 'true' ">
    <ItemGroup>
      <PackageJsons Include="..\..\frontend\creator-fund.web\package.json"/>
    </ItemGroup>

    <!-- Install npm packages if node_modules is missing -->
    <Message Importance="Normal" Text="Installing npm packages for %(PackageJsons.RelativeDir)" Condition="!Exists('%(PackageJsons.RootDir)%(PackageJsons.Directory)/node_modules')"/>
    <Exec Command="npm install" WorkingDirectory="%(PackageJsons.RootDir)%(PackageJsons.Directory)" Condition="!Exists('%(PackageJsons.RootDir)%(PackageJsons.Directory)/node_modules')"/>
  </Target>
</Project>
